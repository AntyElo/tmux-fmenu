#!/usr/bin/env bash
# Base script for your tmux plug-ins
# Enable it with:
#source /path/to/this/file

#tmux_oset <opt> <new_value>
tmux_oset() { tmux set -gq "$1" "$2"; }

#tmux_oget <opt> [<default_value>]
tmux_oget() {
	[ "$#" -lt 1 ] && return 1
	local V=`tmux show -gqv "$1"`
	[ -z "$V" ] && echo "$2" || echo "$V"
}

#tmux_oupd <opt> <pair: "<old>=<new>"> {<pair>}
#tmux_oupd <opt> ${LIST_OF_PAIRS[@]}
tmux_oupd() {
	[ "$#" -lt 1 ] && return 1
	local V=`tmux_oget $1`
	local A=($@);unset A[0]
	local S= R=
	for P in ${A[@]} ; do
		IFS="=" read S R <<< $P
		V=${V//$S/$R}
	done
	#Use nbsp xA0 (Press ^U)
	V=${V//Â /\ }
	tmux_oset "$1" "$V"
}

#tmux_upd_status $A #alias for: tmux_oupd status-right $A && <...>
tmux_upd_status() {
	[ "$#" -lt 1 ] && return 1
	tmux_oupd status-right "$@"
	tmux_oupd status-left  "$@"
}

# Main part; for shell:
# $PATH_TO_FILE/base us #{uwu}=^_^
main() {
	[ "$#" -lt 2 ] && return
	local A=($@);unset A[0]
	case $1 in
		s|oset) tmux_oset ${A[@]} ;;
		g|oget) tmux_oget ${A[@]} ;;
		u|oupd) tmux_oupd ${A[@]} ;;
		us|upd_status) tmux_oupd_status ${A[@]} ;;
	esac
}
main $@
